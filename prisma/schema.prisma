// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Aluno {
  id_aluno              Int       @id @default(autoincrement())
  nome_aluno                  String
  matricula             Int       @unique
  email                 String    @unique
  curso                 String
  numero_grupo          Int?
  grupo_participa Grupo? @relation("participa", fields: [numero_grupo], references: [numero_grupo])
  grupoLidera Grupo? @relation("lidera")
  avaliacoes Avaliacao[] @relation("aluno_avalia")
}

model Professor {
  id_professor          Int       @id @default(autoincrement())
  nome_professor        String
  email                 String    @unique
  matricula             Int       @unique
  avaliacoes Avaliacao[] @relation("professor_avalia")
}

model Grupo {
  numero_grupo          Int       @id @unique
  nome_grupo            String 
  id_lider              Int       @unique
  numero_estande        Int       @unique
  dia_apresentacao      DateTime
  alunos_participam Aluno[] @relation("participa")
  lider Aluno @relation("lidera", fields: [id_lider], references: [id_aluno])
  estande Estande @relation("apresenta_em", fields: [numero_estande], references: [numero_estande])
  avaliacoes Avaliacao[] @relation("avalia_grupo")
}

model Estande {
  numero_estande          Int     @id @unique
  grupos Grupo[] @relation("apresenta_em")
}

model Avaliacao {
  id_avaliador            Int
  numero_grupo_avaliado   Int     
  numero_estande_grupo    Int     @unique
  nota                    Int
  grupo_avaliado Grupo @relation("avalia_grupo", fields: [numero_grupo_avaliado], references: [numero_grupo])
  avaliador_aluno Aluno? @relation("aluno_avalia", fields: [id_avaliador], references: [id_aluno])
  avaliador_professor Professor? @relation("professor_avalia", fields: [id_avaliador], references: [id_professor])
}